{
	"name": "CreateRecOrderQtyCsv",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "UOWarehouses",
						"type": "DatasetReference"
					},
					"name": "UOWarehouses"
				},
				{
					"dataset": {
						"referenceName": "UOItem",
						"type": "DatasetReference"
					},
					"name": "UOItem"
				},
				{
					"dataset": {
						"referenceName": "LegalEntity",
						"type": "DatasetReference"
					},
					"name": "LegalEntity"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "RecomOrderQtyCsvFile",
						"type": "DatasetReference"
					},
					"name": "createCsv"
				}
			],
			"transformations": [
				{
					"name": "joinWhsItem"
				},
				{
					"name": "selectJoinWhsItem"
				},
				{
					"name": "selectWarehouses"
				},
				{
					"name": "filterWarehouse"
				},
				{
					"name": "deriveName"
				},
				{
					"name": "filterActiveLegalEntity"
				},
				{
					"name": "selectActiveLegalEntity"
				},
				{
					"name": "joinWarehouseLegalEntity"
				}
			],
			"scriptLines": [
				"source(output(",
				"          crd3c_automatictocreation as boolean,",
				"          crd3c_automatictocreationname as string,",
				"          crd3c_dataarea as string,",
				"          crd3c_datastatus as integer,",
				"          crd3c_datastatusname as string,",
				"          crd3c_deliveryterms as string,",
				"          crd3c_modeofdelivery as string,",
				"          crd3c_name as string,",
				"          crd3c_refreshday as string,",
				"          crd3c_refreshdayname as string,",
				"          crd3c_refreshfrequency as integer,",
				"          crd3c_refreshtime as timestamp,",
				"          crd3c_site as string,",
				"          crd3c_sourcewhname as string,",
				"          crd3c_uowarehousesid as string,",
				"          crd3c_warehousename as string,",
				"          crd3c_warehousetype as string,",
				"          createdbyname as string,",
				"          createdbyyominame as string,",
				"          createdon as timestamp,",
				"          createdonbehalfbyname as string,",
				"          createdonbehalfbyyominame as string,",
				"          hso_automaticpocreation as boolean,",
				"          hso_automaticpocreationname as string,",
				"          hso_companyicwarehouse as string,",
				"          hso_companylocalwarehouse as string,",
				"          hso_dualpurpose as boolean,",
				"          hso_dualpurposename as string,",
				"          hso_icwarehousename as string,",
				"          hso_maxtoqty as integer,",
				"          hso_ordertypesplit as integer,",
				"          hso_ordertypesplitname as string,",
				"          hso_sourceicwarehouse as string,",
				"          hso_storeleadername as string,",
				"          hso_storeleaderyominame as string,",
				"          hso_vendorname as string,",
				"          importsequencenumber as integer,",
				"          modifiedbyname as string,",
				"          modifiedbyyominame as string,",
				"          modifiedon as timestamp,",
				"          modifiedonbehalfbyname as string,",
				"          modifiedonbehalfbyyominame as string,",
				"          overriddencreatedon as timestamp,",
				"          owneridname as string,",
				"          owneridtype as string,",
				"          owneridyominame as string,",
				"          owningbusinessunitname as string,",
				"          statecode as integer,",
				"          statecodename as string,",
				"          statuscode as integer,",
				"          statuscodename as string,",
				"          timezoneruleversionnumber as integer,",
				"          utcconversiontimezonecode as integer,",
				"          versionnumber as long,",
				"          createdonbehalfby as string,",
				"          hso_vendor as string,",
				"          hso_icwarehouse as string,",
				"          owninguser as string,",
				"          modifiedby as string,",
				"          hso_storeleader as string,",
				"          modifiedonbehalfby as string,",
				"          ownerid as string,",
				"          {@odata.etag} as string,",
				"          crd3c_sourcewh as string,",
				"          createdby as string,",
				"          owningbusinessunit as string,",
				"          owningteam as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> UOWarehouses",
				"source(output(",
				"          crd3c_barcode as string,",
				"          crd3c_dataarea as string,",
				"          crd3c_datastatus as integer,",
				"          crd3c_datastatusname as string,",
				"          crd3c_gender as string,",
				"          crd3c_name as string,",
				"          crd3c_productnumber as string,",
				"          crd3c_simpleid as string,",
				"          crd3c_size as string,",
				"          crd3c_uoitemid as string,",
				"          crd3c_variantname as string,",
				"          createdbyname as string,",
				"          createdbyyominame as string,",
				"          createdon as timestamp,",
				"          createdonbehalfbyname as string,",
				"          createdonbehalfbyyominame as string,",
				"          importsequencenumber as integer,",
				"          modifiedbyname as string,",
				"          modifiedbyyominame as string,",
				"          modifiedon as timestamp,",
				"          modifiedonbehalfbyname as string,",
				"          modifiedonbehalfbyyominame as string,",
				"          overriddencreatedon as timestamp,",
				"          owneridname as string,",
				"          owneridtype as string,",
				"          owneridyominame as string,",
				"          owningbusinessunitname as string,",
				"          statecode as integer,",
				"          statecodename as string,",
				"          statuscode as integer,",
				"          statuscodename as string,",
				"          timezoneruleversionnumber as integer,",
				"          utcconversiontimezonecode as integer,",
				"          versionnumber as long,",
				"          createdonbehalfby as string,",
				"          owninguser as string,",
				"          modifiedby as string,",
				"          modifiedonbehalfby as string,",
				"          ownerid as string,",
				"          {@odata.etag} as string,",
				"          createdby as string,",
				"          owningbusinessunit as string,",
				"          owningteam as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     wildcardPaths:['UOItem.csv']) ~> UOItem",
				"source(output(",
				"          createdonbehalfbyyominame as string,",
				"          statecode as integer,",
				"          owneridname as string,",
				"          statecodename as string,",
				"          importsequencenumber as integer,",
				"          modifiedbyyominame as string,",
				"          crd3c_description as string,",
				"          crd3c_legalentitiesid as string,",
				"          utcconversiontimezonecode as integer,",
				"          createdbyyominame as string,",
				"          modifiedbyname as string,",
				"          versionnumber as long,",
				"          timezoneruleversionnumber as integer,",
				"          owneridtype as string,",
				"          statuscodename as string,",
				"          crd3c_legalentity as string,",
				"          owneridyominame as string,",
				"          modifiedon as timestamp,",
				"          modifiedonbehalfbyyominame as string,",
				"          statuscode as integer,",
				"          createdbyname as string,",
				"          createdon as timestamp,",
				"          owningbusinessunitname as string,",
				"          createdonbehalfbyname as string,",
				"          modifiedonbehalfbyname as string,",
				"          overriddencreatedon as timestamp,",
				"          createdonbehalfby as string,",
				"          owninguser as string,",
				"          modifiedby as string,",
				"          modifiedonbehalfby as string,",
				"          ownerid as string,",
				"          {@odata.etag} as string,",
				"          createdby as string,",
				"          owningbusinessunit as string,",
				"          owningteam as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> LegalEntity",
				"UOItem, selectWarehouses join(upper(UOItem@crd3c_dataarea) == upper(selectWarehouses@crd3c_dataarea),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinWhsItem",
				"joinWhsItem select(mapColumn(",
				"          crd3c_itemvariant = crd3c_simpleid,",
				"          crd3c_barcode,",
				"          crd3c_variantname,",
				"          crd3c_itemvariantlookup = crd3c_uoitemid,",
				"          crd3c_dataarea = UOItem@crd3c_dataarea,",
				"          crd3c_site = selectWarehouses@crd3c_name,",
				"          crd3c_warehouselookup = crd3c_uowarehousesid,",
				"          hso_size = crd3c_size",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectJoinWhsItem",
				"joinWarehouseLegalEntity select(mapColumn(",
				"          crd3c_name,",
				"          crd3c_dataarea,",
				"          crd3c_warehousename,",
				"          crd3c_uowarehousesid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectWarehouses",
				"UOWarehouses filter(or(upper(crd3c_warehousetype) == 'STORE' && statecode == 0,  upper(crd3c_warehousetype) == \"STOCK\" && hso_dualpurpose)) ~> filterWarehouse",
				"selectJoinWhsItem derive(crd3c_name = concat(crd3c_itemvariant, \"_\",crd3c_site)) ~> deriveName",
				"LegalEntity filter(statecode == 0) ~> filterActiveLegalEntity",
				"filterActiveLegalEntity select(mapColumn(",
				"          crd3c_legalentity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectActiveLegalEntity",
				"filterWarehouse, selectActiveLegalEntity join(upper(crd3c_dataarea) == upper(crd3c_legalentity),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinWarehouseLegalEntity",
				"deriveName sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          crd3c_name as string,",
				"          crd3c_variantname as string,",
				"          crd3c_barcode as string,",
				"          crd3c_productnumber as string,",
				"          crd3c_dataarea as string,",
				"          crd3c_size as string",
				"     ),",
				"     partitionFileNames:['RecOrderQty.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> createCsv"
			]
		}
	}
}