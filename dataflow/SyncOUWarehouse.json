{
	"name": "SyncOUWarehouse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "D365FOSynapseDelta",
						"type": "LinkedServiceReference"
					},
					"name": "InventLocation"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "UOWarehouses",
						"type": "DatasetReference"
					},
					"name": "SinkOUWarehouse"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "filterDataAreaNonEmpty"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Container as string",
				"}",
				"source(output(",
				"          Id as string,",
				"          SinkCreatedOn as timestamp,",
				"          SinkModifiedOn as timestamp,",
				"          allowlaborstandards as long,",
				"          allowmarkingreservationremoval as long,",
				"          consolidateshipatrtw as long,",
				"          cyclecountallowpalletmove as long,",
				"          decrementloadline as long,",
				"          fshstore as long,",
				"          inventcountinggroup_br as long,",
				"          inventlocationtype as long,",
				"          inventprofiletype_ru as long,",
				"          manual as long,",
				"          printbolbeforeshipconfirm as long,",
				"          prodreserveonlywhse as long,",
				"          removeinventblockingonstatuschange as long,",
				"          reqrefill as long,",
				"          reserveatloadpost as long,",
				"          retailinventnegfinancial as long,",
				"          retailinventnegphysical as long,",
				"          uniquecheckdigits as long,",
				"          usewmsorders as long,",
				"          whsenabled as long,",
				"          whsrawmaterialpolicy as long,",
				"          wmsaislenameactive as long,",
				"          wmslevelnameactive as long,",
				"          wmspositionnameactive as long,",
				"          wmsracknameactive as long,",
				"          warehouseautoreleasereservation as long,",
				"          releasetowarehouserule as long,",
				"          autoupdateshipment as long,",
				"          enablequalitymanagement as long,",
				"          loadreleasereservationpolicy as long,",
				"          whsprodorderbackflushmustusereservedqty as long,",
				"          inventusedefaultproductionlocationforformulabom as long,",
				"          rafpostingmethod as long,",
				"          sunecommintegrationtype as long,",
				"          sun3plintegrationtype as long,",
				"          suntafreleasegrpmethod as long,",
				"          suntafreleasethreshmethod as long,",
				"          suntafaggplanningwhse as long,",
				"          hsoatpcalculation as long,",
				"          hsoisshortpickadjustmentjour as long,",
				"          onpickingrequired as long,",
				"          oninventorycalculationmethod as long,",
				"          onprocessssccreceiptmessages as long,",
				"          on3plssccinboundenabled as long,",
				"          enableexternalwarehouse as long,",
				"          sysdatastatecode as long,",
				"          activitytype_ru as string,",
				"          branchnumber as string,",
				"          custaccount_br as string,",
				"          custaccount_hu as string,",
				"          defaultkanbanfinishedgoodslocation as string,",
				"          defaultproductionfinishgoodslocation as string,",
				"          defaultshipmaintenanceloc as string,",
				"          defaultstatusid as string,",
				"          emptypalletlocation as string,",
				"          inventlocationid as string,",
				"          inventlocationidgoodsinroute_ru as string,",
				"          inventlocationidquarantine as string,",
				"          inventlocationidreqmain as string,",
				"          inventlocationidtransit as string,",
				"          inventlocationlevel as long,",
				"          inventprofileid_ru as string,",
				"          inventsiteid as string,",
				"          maxpickingroutetime as long,",
				"          maxpickingroutevolume as decimal(38,6),",
				"          name as string,",
				"          numbersequencegroup_ru as string,",
				"          pickinglinetime as long,",
				"          rbodefaultinventprofileid_ru as string,",
				"          rbodefaultwmslocationid as string,",
				"          rbodefaultwmspalletid as string,",
				"          reqcalendarid as string,",
				"          retailweightex1 as decimal(38,6),",
				"          retailwmslocationiddefaultreturn as string,",
				"          retailwmspalletiddefaultreturn as string,",
				"          vendaccount as string,",
				"          vendaccountcustom_ru as string,",
				"          wmslevelformat as string,",
				"          wmslocationiddefaultissue as string,",
				"          wmslocationiddefaultreceipt as string,",
				"          wmslocationidgoodsinroute_ru as string,",
				"          wmspositionformat as string,",
				"          wmsrackformat as string,",
				"          defaultproductioninputlocation as string,",
				"          defaultreturncreditonlylocation as string,",
				"          defaultcontainertypecode as string,",
				"          workprocessingpolicyname as string,",
				"          defaultqualitymaintenancelocation as string,",
				"          hmimexportlanguage as string,",
				"          hmimdomesticlanguage as string,",
				"          defaultfinalshipmentlocation as string,",
				"          defaultsortinglocation as string,",
				"          rejectorderfulfillment as string,",
				"          itminventlocationidunder as string,",
				"          itminventlocationidgit as string,",
				"          suntafforecastchannelid as string,",
				"          suntafreleasegroupthreshold as decimal(38,6),",
				"          suntafreleasethreshold as decimal(38,6),",
				"          suntafaggplanningwhseid as string,",
				"          suntafsplitpercentage as long,",
				"          hso3plvendaccount as string,",
				"          hsoinventlocationidwaiting as string,",
				"          hsoatpissuemargin as long,",
				"          hsoportwarehouse as string,",
				"          hsovirtualwarehouse as string,",
				"          hsofiscaldocumentemail as string,",
				"          oninventtodeviationvirtualwh as string,",
				"          onreturnwarehouse as string,",
				"          onvatcountry as string,",
				"          onvatid as string,",
				"          onforecastnettinggroupid as string,",
				"          onovgwarehouse as string,",
				"          ondlvdatecalendarcalculation as string,",
				"          onreturnsite as string,",
				"          externalwarehouseid as string,",
				"          externalwarehousedefaultlocation as string,",
				"          externalwarehousemanagementsystemid as string,",
				"          modifieddatetime as timestamp,",
				"          modifiedby as string,",
				"          modifiedtransactionid as long,",
				"          createddatetime as timestamp,",
				"          createdby as string,",
				"          createdtransactionid as long,",
				"          dataareaid as string,",
				"          recversion as long,",
				"          partition as long,",
				"          sysrowversion as long,",
				"          recid as long,",
				"          tableid as long,",
				"          versionnumber as long,",
				"          createdon as timestamp,",
				"          modifiedon as timestamp,",
				"          IsDelete as boolean,",
				"          createdonpartition as string,",
				"          PartitionId as string,",
				"          onisinventtransfershortpick as long,",
				"          oninventlocationidinventtransfershortpick as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: ($Container),",
				"     folderPath: 'deltalake/inventlocation_partitioned',",
				"     manifestType: 'manifest') ~> InventLocation",
				"filterDataAreaNonEmpty select(mapColumn(",
				"          crd3c_name = inventlocationid,",
				"          crd3c_site = inventsiteid,",
				"          crd3c_warehousename = name,",
				"          crd3c_dataarea = dataareaid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(crd3c_warehousetype = iif(endsWith(upper( crd3c_name), \"-STORE\") ,\"Store\",iif(endsWith(upper( crd3c_name), \"-STK\") ,\"Stock\",\"\")),",
				"          crd3c_warehousename = replace(replace(crd3c_warehousename, \"â™‚\", \" \"),\"\u000b\", \" \")) ~> derivedColumn1",
				"derivedColumn1 alterRow(upsertIf(true())) ~> AlterRow1",
				"InventLocation filter(not(isNull(dataareaid))) ~> filterDataAreaNonEmpty",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     alternateKeyName: 'crd3c_warehousedataarea',",
				"     partitionFileNames:['OuWarehouseCsv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> SinkOUWarehouse"
			]
		}
	}
}