{
	"name": "InventSum_Sample",
	"properties": {
		"folder": {
			"name": "OL/Sample Data"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "D365FOSynapseDelta",
						"type": "LinkedServiceReference"
					},
					"name": "InventSum"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "storageaccount",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          SinkCreatedOn as timestamp,",
				"          SinkModifiedOn as timestamp,",
				"          closed as long,",
				"          closedqty as long,",
				"          isexcludedfrominventoryvalue as long,",
				"          sysdatastatecode as long,",
				"          arrived as decimal(38,6),",
				"          availordered as decimal(38,6),",
				"          availphysical as decimal(38,6),",
				"          deducted as decimal(38,6),",
				"          inventdimid as string,",
				"          itemid as string,",
				"          lastupddateexpected as timestamp,",
				"          lastupddatephysical as timestamp,",
				"          onorder as decimal(38,6),",
				"          ordered as decimal(38,6),",
				"          pdscwarrived as decimal(38,6),",
				"          pdscwavailordered as decimal(38,6),",
				"          pdscwavailphysical as decimal(38,6),",
				"          pdscwdeducted as decimal(38,6),",
				"          pdscwonorder as decimal(38,6),",
				"          pdscwordered as decimal(38,6),",
				"          pdscwphysicalinvent as decimal(38,6),",
				"          pdscwpicked as decimal(38,6),",
				"          pdscwpostedqty as decimal(38,6),",
				"          pdscwquotationissue as decimal(38,6),",
				"          pdscwquotationreceipt as decimal(38,6),",
				"          pdscwreceived as decimal(38,6),",
				"          pdscwregistered as decimal(38,6),",
				"          pdscwreservordered as decimal(38,6),",
				"          pdscwreservphysical as decimal(38,6),",
				"          physicalinvent as decimal(38,6),",
				"          physicalvalue as decimal(38,6),",
				"          physicalvalueseccur_ru as decimal(38,6),",
				"          picked as decimal(38,6),",
				"          postedqty as decimal(38,6),",
				"          postedvalue as decimal(38,6),",
				"          postedvalueseccur_ru as decimal(38,6),",
				"          quotationissue as decimal(38,6),",
				"          quotationreceipt as decimal(38,6),",
				"          received as decimal(38,6),",
				"          registered as decimal(38,6),",
				"          reservordered as decimal(38,6),",
				"          reservphysical as decimal(38,6),",
				"          configid as string,",
				"          inventbatchid as string,",
				"          inventcolorid as string,",
				"          inventgtdid_ru as string,",
				"          inventlocationid as string,",
				"          inventownerid_ru as string,",
				"          inventprofileid_ru as string,",
				"          inventserialid as string,",
				"          inventsiteid as string,",
				"          inventsizeid as string,",
				"          inventstatusid as string,",
				"          inventstyleid as string,",
				"          inventversionid as string,",
				"          licenseplateid as string,",
				"          wmslocationid as string,",
				"          wmspalletid as string,",
				"          inventdimension1 as string,",
				"          inventdimension2 as string,",
				"          inventdimension3 as string,",
				"          inventdimension4 as string,",
				"          inventdimension5 as string,",
				"          inventdimension6 as string,",
				"          inventdimension7 as string,",
				"          inventdimension8 as string,",
				"          inventdimension9 as timestamp,",
				"          inventdimension10 as decimal(38,6),",
				"          inventdimension11 as string,",
				"          inventdimension12 as string,",
				"          modifieddatetime as timestamp,",
				"          modifiedby as string,",
				"          modifiedtransactionid as long,",
				"          createddatetime as timestamp,",
				"          createdby as string,",
				"          createdtransactionid as long,",
				"          dataareaid as string,",
				"          recversion as long,",
				"          partition as long,",
				"          sysrowversion as long,",
				"          recid as long,",
				"          tableid as long,",
				"          versionnumber as long,",
				"          createdon as timestamp,",
				"          modifiedon as timestamp,",
				"          IsDelete as boolean,",
				"          createdonpartition as string,",
				"          PartitionId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'dataverse-ontest-unqccd0037834be4cec846b41a3ea290',",
				"     folderPath: 'deltalake/inventsum_partitioned') ~> InventSum",
				"InventSum filter(itemid == \"3ME10140264\" || \r",
				"itemid == \"3WF10061508\" || \r",
				"itemid == \"2UF10080069\" ||\r",
				"itemid == \"3WF10053037\" || \r",
				"itemid == \"2UE30660553\" || \r",
				"itemid == \"3WD30120958\") ~> filter1",
				"filter1 select(mapColumn(",
				"          dataareaid,",
				"          itemid,",
				"          inventsiteid,",
				"          inventlocationid,",
				"          availphysical,",
				"          ordered,",
				"          inventsizeid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'whsstockreplenish',",
				"     folderPath: 'OL',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['inventSum_Sample.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}